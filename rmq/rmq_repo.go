// Code generated by ifacemaker; DO NOT EDIT.

package rmq

import (
	amqp "github.com/rabbitmq/amqp091-go"
)

// RabbitMQRepo ...
type RabbitMQRepo interface {
	Close() error
	Publish(exchange, routingKey string, body []byte) error
	Consume(queue, consumer string, autoAck, exclusive, noLocal, noWait bool, args amqp.Table) (<-chan amqp.Delivery, error)
	QueueDeclare(name string, durable, autoDelete, exclusive, noWait bool, args amqp.Table) (amqp.Queue, error)
	ExchangeDeclare(name, kind string, durable, autoDelete, internal, noWait bool, args amqp.Table) error
	QueueBind(name, key, exchange string, noWait bool, args amqp.Table) error
	QueueUnbind(name, key, exchange string, args amqp.Table) error
	QueueDelete(name string, ifUnused, ifEmpty, noWait bool) (int, error)
	ExchangeDelete(name string, ifUnused, noWait bool) error
	PublishWithOpts(body []byte) error
	ConsumeWithOpts() (<-chan amqp.Delivery, error)
	QueueDeclareWithOpts() (amqp.Queue, error)
	ExchangeDeclareWithOpts() error
	IsDisconected() bool
	MonitorConn() <-chan bool
	GetConn() ConnectionRepo
	GetCh() ChannelRepo
}
